diff --git a/docker/Dockerfile b/docker/Dockerfile
index 034f73736..381a99c4b 100644
--- a/docker/Dockerfile
+++ b/docker/Dockerfile
@@ -193,6 +193,8 @@ ARG SCCACHE_ENDPOINT
 ARG SCCACHE_BUCKET_NAME=vllm-build-sccache
 ARG SCCACHE_REGION_NAME=us-west-2
 ARG SCCACHE_S3_NO_CREDENTIALS=0
+ARG AWS_ACCESS_KEY_ID
+ARG AWS_SECRET_ACCESS_KEY
 
 # Flag to control whether to use pre-built vLLM wheels
 ARG VLLM_USE_PRECOMPILED=""
@@ -201,6 +203,8 @@ ARG VLLM_MAIN_CUDA_VERSION=""
 # if USE_SCCACHE is set, use sccache to speed up compilation
 RUN --mount=type=cache,target=/root/.cache/uv \
     --mount=type=bind,source=.git,target=.git \
+    --mount=type=secret,id=SETUPTOOLS_SCM_PRETEND_VERSION \
+    export SETUPTOOLS_SCM_PRETEND_VERSION=$(cat /run/secrets/SETUPTOOLS_SCM_PRETEND_VERSION_FOR_VLLM); \
     if [ "$USE_SCCACHE" = "1" ]; then \
         echo "Installing sccache..." \
         && curl -L -o sccache.tar.gz ${SCCACHE_DOWNLOAD_URL} \
@@ -211,6 +215,8 @@ RUN --mount=type=cache,target=/root/.cache/uv \
         && export SCCACHE_BUCKET=${SCCACHE_BUCKET_NAME} \
         && export SCCACHE_REGION=${SCCACHE_REGION_NAME} \
         && export SCCACHE_S3_NO_CREDENTIALS=${SCCACHE_S3_NO_CREDENTIALS} \
+        && export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
+        && export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
         && export SCCACHE_IDLE_TIMEOUT=0 \
         && export CMAKE_BUILD_TYPE=Release \
         && export VLLM_USE_PRECOMPILED="${VLLM_USE_PRECOMPILED}" \
@@ -227,6 +233,10 @@ ENV CCACHE_DIR=/root/.cache/ccache
 RUN --mount=type=cache,target=/root/.cache/ccache \
     --mount=type=cache,target=/root/.cache/uv \
     --mount=type=bind,source=.git,target=.git  \
+    --mount=type=secret,id=SETUPTOOLS_SCM_PRETEND_VERSION_FOR_VLLM \
+    export SETUPTOOLS_SCM_PRETEND_VERSION=$(cat /run/secrets/SETUPTOOLS_SCM_PRETEND_VERSION_FOR_VLLM); \
+    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}; \
+    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}; \
     if [ "$USE_SCCACHE" != "1" ]; then \
         # Clean any existing CMake artifacts
         rm -rf .deps && \
